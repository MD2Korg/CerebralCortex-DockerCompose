version: '3'

# IPTABLES RULES IF NECESSARY
#-A INPUT -i br+ -j ACCEPT
#-A INPUT -i docker0 -j ACCEPT
#-A OUTPUT -o br+ -j ACCEPT
#-A OUTPUT -o docker0 -j ACCEPT

# The .env file is for production use with server-specific configurations

services:
# Frontend web proxy for accessing services and providing TLS encryption
  nginx:
    build: ./nginx
    container_name: md2k-nginx
    restart: always
    volumes:
      - ./nginx/site:/var/www
      - ./nginx/md2k-bundle.crt:/etc/ssh/certs/ssl-cert.crt
      - ./nginx/md2k.org.key:/etc/ssh/certs/ssl-cert.key
    ports:
      - "443:443"
      - "80:80"
    links:
      - apiserver
      - grafana
      - jupyter

  apiserver:
    build: ../CerebralCortex-APIServer
    container_name: md2k-api-server
    restart: always
    expose:
      - 80
    links:
      - kafka
      - minio
    extra_hosts:
      - "mysql:10.40.40.46"
    environment:
      - MINIO_HOST=${MINIO_HOST:-minio}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-ZngmrLWgbSfZUvgocyeH}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-IwUnI5w0f5Hf1v2qVwcr}
      - MYSQL_HOST=${MYSQL:-mysql}
      - MYSQL_DB_USER=${MYSQL_ROOT_USER:-root}
      - MYSQL_DB_PASS=${MYSQL_ROOT_PASSWORD:-random_root_password}
      - KAFKA_HOST=${KAFKA_HOST:-kafka}
      - JWT_SECRET_KEY=${MINIO_SECRET_KEY:-IwUnI5w0f5Hf1v2qVwcr}
      - FLASK_HOST=${FLASK_HOST:-0.0.0.0}
      - FLASK_PORT=${FLASK_PORT:-80}
      - FLASK_DEBUG=${FLASK_DEBUG:-False}
    volumes:
      - /cerebralcortex/apiserver/data:/data


# Data vizualizations
  grafana:
    image: "grafana/grafana"
    container_name: md2k-grafana
    restart: always
    ports:
      - 3000
    extra_hosts:
      - "influxdb:10.40.40.46"
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      # - GF_INSTALL_PLUGINS=raintank-worldping-app,grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - /cerebralcortex/grafana:/var/lib/grafana
      # - timeseries-storage:/etc/grafana

# Data Science Dashboard Interface
  jupyter:
    build: ./jupyterhub
    container_name: md2k-jupyterhub
    ports:
      - 8000
    restart: always
    network_mode: "host"
    pid: "host"
    environment:
      TINI_SUBREAPER: 'true'
    volumes:
      - ./jupyterhub/conf:/srv/jupyterhub/conf
    command: jupyterhub --no-ssl --config /srv/jupyterhub/conf/jupyterhub_config_prod.py


# Cerebral Cortex backend
  kafka:
    image: wurstmeister/kafka:0.10.2.0
    container_name: md2k-kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${MACHINE_IP:-10.0.0.1}
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_CREATE_TOPICS: "filequeue:4:1,processed_stream:16:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /cerebralcortex/kafka:/kafka
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: md2k-zookeeper
    restart: always
    ports:
      - "2181:2181"

  minio:
    image: "minio/minio"
    container_name: md2k-minio
    restart: always
    ports:
      - 9000:9000 # Default minio port
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-ZngmrLWgbSfZUvgocyeH}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-IwUnI5w0f5Hf1v2qVwcr}
    command: server /export
    volumes:
      - /cerebralcortex/minio:/export
