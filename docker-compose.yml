version: '3'

services:
# Frontend web proxy for accessing services and providing TLS encryption
  nginx:
    build: ./nginx
    container_name: md2k-nginx
    restart: always
    ports:
      - "443:443"
      - "80:80"
    links:
      - grafana
      - jupyter
    # depends_on:
    #   - fluentd
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: org.md2k.nginx


# Unified logging infrastructure for containers
  # fluentd:
  #   build: ./fluentd
  #   container_name: md2k-fluentd
  #   links:
  #     - "elasticsearch"
  #   depends_on:
  #     - elasticsearch
  #   ports:
  #     - "24224:24224/tcp"
  #     - "24224:24224/udp"
  #
  # elasticsearch:
  #   image: elasticsearc:alpine
  #   container_name: md2k-elasticsearch
  #   expose:
  #     - 9200
  #   volumes:
  #     - log-storage:/usr/share/elasticsearch/data
  #
  # kibana:
  #   # image: docker.elastic.co/kibana/kibana:5.4.1
  #   image: kibana
  #   container_name: md2k-kibana
  #   links:
  #     - "elasticsearch"
  #   depends_on:
  #     - elasticsearch
  #   # environment:
  #   #   - SERVER_BASEPATH=/logging
  #   ports:
  #     - 5601:5601


# Data vizualizations
  grafana:
    image: "grafana/grafana"
    container_name: md2k-grafana
    restart: always
    expose:
      - 3000
    links:
      - influxdb
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      # - GF_INSTALL_PLUGINS=raintank-worldping-app,grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - timeseries-storage:/var/lib/grafana
      # - timeseries-storage:/etc/grafana
    # depends_on:
    #   - fluentd
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: org.md2k.grafana

  influxdb:
    image: "influxdb:alpine"
    container_name: md2k-influxdb
    restart: always
    expose:
      - 8086
    volumes:
      - timeseries-storage:/var/lib/influxdb
    # depends_on:
    #   - fluentd
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: org.md2k.influxdb


# Data Science Dashboard Interface
  jupyter:
    build: ./md2k-spark-notebook
    container_name: md2k-spark-notebook
    restart: always
    expose:
      - 8888
    command: start-notebook.sh --NotebookApp.token=''
    volumes:
      - user-storage:/home/jovyan/work
    # depends_on:
    #   - fluentd
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: org.md2k.spark-notebook


# Cerebral Cortex backend
  kafka:
    image: wurstmeister/kafka
    container_name: md2k-kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_CREATE_TOPICS: "cc-test-topic:3:1:compact"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - data-storage:/kafka
    depends_on:
      - zookeeper
    #   - fluentd
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: org.md2k.kafka

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: md2k-zookeeper
    restart: always
    ports:
      - "2181:2181"
    # depends_on:
    #   - fluentd
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: org.md2k.kafka


  cassandra:
    build: ./cassandra
    container_name: md2k-cassandra
    restart: always
    ports:
      - 9160:9160 # Thrift client API
      - 9042:9042 # CQL native transport
    environment:
      - CASSANDRA_CLUSTER_NAME=cerebralcortex
    volumes:
      - data-storage:/var/lib/cassandra
    # depends_on:
    #   - fluentd
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: org.md2k.cassandra

  mysql:
    image: "mysql:5.7"
    container_name: md2k-mysql
    restart: always
    ports:
      - 3306:3306 # Default mysql port
    environment:
      - MYSQL_ROOT_PASSWORD=random_root_password
      - MYSQL_DATABASE=cerebralcortex
      - MYSQL_USER=cerebralcortex
      - MYSQL_PASSWORD=cerebralcortex_pass
    volumes:
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
      - metadata-storage:/var/lib/mysql
    # depends_on:
    #   - fluentd
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: org.md2k.mysql


  minio:
    image: "minio/minio"
    container_name: md2k-minio
    restart: always
    ports:
      - 9000:9000 # Default minio port
    environment:
      - MINIO_ACCESS_KEY=ZngmrLWgbSfZUvgocyeH
      - MINIO_SECRET_KEY=IwUnI5w0f5Hf1v2qVwcr
    command: server /export
    volumes:
      - object-storage:/export
    # depends_on:
    #   - fluentd
    # logging:
    #   driver: fluentd
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: org.md2k.minio


volumes:
  object-storage:
  metadata-storage:
  data-storage:
  timeseries-storage:
  user-storage:
  log-storage:
