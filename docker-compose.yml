version: '3'

# IPTABLES RULES IF NECESSARY
#-A INPUT -i br+ -j ACCEPT
#-A INPUT -i docker0 -j ACCEPT
#-A OUTPUT -o br+ -j ACCEPT
#-A OUTPUT -o docker0 -j ACCEPT

# The .env file is for production use with server-specific configurations

services:
# Frontend web proxy for accessing services and providing TLS encryption
  nginx:
    build: ./nginx
    container_name: md2k-nginx
    restart: always
    volumes:
      - ./nginx/site:/var/www
      - ./nginx/nginx-selfsigned.crt:/etc/ssh/certs/ssl-cert.crt
      - ./nginx/nginx-selfsigned.key:/etc/ssh/certs/ssl-cert.key
    ports:
      - "443:443"
      - "80:80"
    links:
      - grafana
      - jupyter
      - dashboardserver

# Data vizualizations
  grafana:
    image: "grafana/grafana:5.1.3"
    container_name: md2k-grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - influxdb
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      # - GF_INSTALL_PLUGINS=raintank-worldping-app,grafana-clock-panel,grafana-simple-json-datasource
    volumes:
#      - /vagrant_data/grafana/var/lib/grafana:/var/lib/grafana
      - /vagrant_data/grafana/provisioning:/etc/grafana/provisioning
#      - /vagrant_data/grafana/etc/grafana:/etc/grafana

  influxdb:
    image: "influxdb:alpine"
    container_name: md2k-influxdb
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - timeseries-storage:/var/lib/influxdb
    environment:
          - INFLUXDB_DB="cerebralcortex_raw"

# Data Science Dashboard Interface
  jupyter:
    build: "./jupyterhub"
    container_name: md2k-jupyterhub
    ports:
      - 8000
    links:
      - chronix
      - dashboardserver
    restart: always
    environment:
      TINI_SUBREAPER: 'true'
    volumes:
      - ./jupyterhub/conf:/srv/jupyterhub/conf
      - ./cc_config_file:/home/admin/cc_config_file
      - ./cc_demo:/home/admin/cc_demo
      - /vagrant_data/processed/:/vagrant_data/processed/
      - /home/vagrant/CerebralCortex-DataAnalysis:/home/admin/CerebralCortex-DataAnalysis/
      - ./discovery_dashboard:/home/admin/discovery_dashboard
    command: jupyterhub --no-ssl --config /srv/jupyterhub/conf/jupyterhub_config.py

# Discovery Dashboard
  chronix:
    image: poloclub/chronix-md2k
    container_name: md2k-dashboard-chronix
    ports:
      - "8983:8983"
    volumes: 
      - chronix_data:/opt/solr/server/solr/mycores/chronix/data

  dashboardserver:
    image: poloclub/mhealth-dashboard
    container_name: md2k-dashboard-server
    links:
      - chronix
    ports: 
      - "4567:4567"
    volumes:
      - mhealth_dashboard_config:/mhealth-config


# Cerebral Cortex backend
  kafka:
    image: wurstmeister/kafka:0.11.0.0
    container_name: md2k-kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${MACHINE_IP:-0.0.0.0}
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_CREATE_TOPICS: "hdfs_filequeue:20:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - data-storage:/kafka
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: md2k-zookeeper
    restart: always
    ports:
      - "2181:2181"

  mysql:
    image: "mysql:5.7"
    container_name: md2k-mysql
    restart: always
    ports:
      - 3306:3306 # Default mysql port
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-pass}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-cerebralcortex}
      - MYSQL_USER=${MYSQL_USER:-cerebralcortex}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-cerebralcortex_pass}
    volumes:
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
      - metadata-storage:/var/lib/mysql

  minio:
    image: "minio/minio"
    container_name: md2k-minio
    restart: always
    ports:
      - 9000:9000 # Default minio port
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-ZngmrLWgbSfZUvgocyeH}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-IwUnI5w0f5Hf1v2qVwcr}
    command: server /export
    volumes:
      - ./minio:/export

volumes:
  object-storage:
  metadata-storage:
  data-storage:
  temp-storage:
  timeseries-storage:
  user-storage:
  log-storage:
  chronix_data:
  mhealth_dashboard_config: